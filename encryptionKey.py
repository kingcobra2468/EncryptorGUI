def encryptKey():
    key = {                     #for spaces fill with previous character:
        'a':'¥',
        'b':'',
        'c':'Ģ',
        'd':'Ã',
        'e':'+',
        'f':'ú',
        'g':'ć',
        'h':'ě',
        'i':'|',
        'j':'>',
        'k':'<',
        'l':'~',
        'm':'/',
        'n':'0',
        'o':';',
        'p':':',
        'q':')',
        'r':'(',
        's':'*',
        't':'&',
        'u':'^',
        'v':'%',
        'w':'$',
        'x':'#',
        'y':'@',
        'z':'`',
    }
    return key



def decryptKey():
    key = {                     #for spaces fill with previous character:
        '¥':'a',
        '':'b',
        'Ģ':'c',
        'Ã':'d',
        '+':'e',
        'ú':'f',
        'ć':'g',
        'ě':'h',
        '|':'i',
        '>':'j',
        '<':'k',
        '~':'l',
        '/':'m',
        '0':'n',
        ';':'o',
        ':':'p',
        ')':'q',
        '(':'r',
        '*':'s',
        '&':'t',
        '^':'u',
        '%':'v',
        '$':'w',
        '#':'x',
        '@':'y',
        '`':'z',
    }
    return key